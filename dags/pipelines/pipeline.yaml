schema: "https://myorg.com/schemas/pipeline/v1"
pipeline:
  name: "globalise_etl_pipeline"
  description: "Reads data from Django API"
  schedule: "@daily"
#  params:
#    location: ""  # Default value

  tasks:
#    fetch_api_with_page:
#      type: "FetchAPIWithPageOperator"
#      table_name: "location"
#      distance: 4
#      output_trace: "ttl"
#      output_store: "ttl"
    test_comunica:
      type: "EmitTTLOperator"
      input_file_path: "http://util-server:8000/static/output.ttl"
      output_store: "ttl"
      output_trace: "ttl"

    save_file_ttl:
      type: "SaveFileTTLOperator"
      output_trace: "ttl"
      output_store: "ttl"

    run_sparql_comunica:
      type: "RunSparqlComunicaOperator"
      docker_image: "comunica/query-sparql"
      docker_network: "traefik-public"
      docker_rdf_file: "http://util-server:8000/static/output.ttl"
      docker_output_format: "text/csv"
      output_trace: "csv"
      output_store: "csv"
      query: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/entities/locations/universal-query.sparql"
    csv_iterator:
      type: "CSVIteratorOperator"
      output_trace: "csv"
      tasks:
        json_to_csv_row:
          type: "JSONToCSVOperator"
#        print_csv_row:
#          type: "PrintOperator"
        generate_sparql_per_csv_row:
          type: "XSLTTransformationOperator"
          fields_file: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/entities/locations/fields.xml"
          xslt_file: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/src/toSPARQL.xsl"
          xslt_params:
            lookup-uri: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/entities/lookup.xml"
            ns-uri: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/entities/GLBM_2.xml"
            root-uri: "https://raw.githubusercontent.com/globalise-huygens/gl-etl/refs/heads/main/entities/locations/root.xml"
          output_trace: "sparql"
          output_store: "sparql"
        generate_ttl_per_csv_row:
          type: "CSVToTTLOperator"
          base_uri: "http://example.globalise.nl/temp/location"
        run_sparql_on_csv_ttl_row:
          type: "RunSparqlComunicaOperator"
          docker_image: "comunica/query-sparql"
          docker_network: "traefik-public"
          docker_rdf_file: "file_uri:ttl"
          docker_output_format: "text/turtle"
          output_trace: "ttl"
          output_store: "ttl"
          query: "file_uri:sparql"
        collect_ttl_rows:
          type: "CSVCollectorOperator"
          message_queue: "all_the_rows"
    get_unique_places:
      type: "SplitGraphOperator"
      message_queue: "all_the_rows"
      output_trace: "ttl"
      output_store: "ttl"
    convert_ttl_to_jsonld:
      type: "ConvertTtlToJsonldOperator"
      message_queue: "return_value"
      output_trace: "jsonld"
      output_store: "jsonld"
